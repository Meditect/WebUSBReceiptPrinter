{"version":3,"file":"webusb-receipt-printer.umd.js","sources":["../src/event-emitter.ts","../src/main.ts"],"sourcesContent":["type EventsMap = Record<string, unknown[]>;\n\nexport class EventEmitter<E extends EventsMap> {\n\tprivate events = new Map<keyof E, Set<(...args: E[keyof E]) => void>>();\n\n\ton<K extends keyof E>(event: K, listener: (...args: E[K]) => void): void {\n\t\tconst set =\n\t\t\t(this.events.get(event) as Set<(...args: E[K]) => void>) ?? new Set();\n\t\tset.add(listener);\n\t\tthis.events.set(\n\t\t\tevent,\n\t\t\tset as unknown as Set<(...args: E[keyof E]) => void>,\n\t\t);\n\t}\n\n\temit<K extends keyof E>(event: K, ...args: E[K]): void {\n\t\tconst set = this.events.get(event) as\n\t\t\t| Set<(...args: E[K]) => void>\n\t\t\t| undefined;\n\t\tif (!set) return;\n\t\tfor (const fn of set) setTimeout(() => fn(...args), 0);\n\t}\n}\n","import { EventEmitter } from \"./event-emitter\";\n\ntype PrinterLanguage = \"esc-pos\" | \"star-prnt\" | \"star-graphics\" | \"star-line\";\ntype CodepageMapping =\n\t| \"default\"\n\t| \"zjiang\"\n\t| \"mpt\"\n\t| \"bixolon\"\n\t| \"star\"\n\t| \"epson\"\n\t| \"citizen\"\n\t| \"hp\"\n\t| \"xprinter\";\n\ntype ConnectedEventPayload = {\n\ttype: \"usb\";\n\tmanufacturerName?: string;\n\tproductName?: string;\n\tserialNumber?: string;\n\tvendorId: number;\n\tproductId: number;\n\tlanguage: PrinterLanguage;\n\tcodepageMapping: CodepageMapping;\n};\n\nexport type PrinterEvents = {\n\tconnected: [ConnectedEventPayload]; // 1 argument\n\tdisconnected: []; // aucun argument\n\tdata: [DataView]; // 1 argument\n};\n\ntype MaybeAsync<T> = T | Promise<T>;\n\ntype DeviceProfile = {\n\tfilters: USBDeviceFilter[];\n\tconfiguration: number;\n\tinterface: number;\n\tlanguage:\n\t\t| PrinterLanguage\n\t\t| ((device: USBDevice) => MaybeAsync<PrinterLanguage>);\n\tcodepageMapping:\n\t\t| CodepageMapping\n\t\t| ((device: USBDevice) => MaybeAsync<CodepageMapping>);\n};\n\nconst DeviceProfiles: DeviceProfile[] = [\n\t/* POS-8022 and similar printers */\n\t{\n\t\tfilters: [{ vendorId: 0x0483, productId: 0x5743 }],\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\t\tlanguage: \"esc-pos\",\n\t\tcodepageMapping: \"default\",\n\t},\n\n\t/* POS-5805, POS-8360 and similar printers */\n\t{\n\t\tfilters: [{ vendorId: 0x0416, productId: 0x5011 }],\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\t\tlanguage: \"esc-pos\",\n\t\tcodepageMapping: \"zjiang\",\n\t},\n\n\t/* MPT-II and similar printers */\n\t{\n\t\tfilters: [{ vendorId: 0x0483, productId: 0x5840 }],\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\t\tlanguage: \"esc-pos\",\n\t\tcodepageMapping: \"mpt\",\n\t},\n\n\t/* Samsung SRP (Bixolon) */\n\t{\n\t\tfilters: [{ vendorId: 0x0419 }, { vendorId: 0x1504 }],\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\t\tlanguage: \"esc-pos\",\n\t\tcodepageMapping: \"bixolon\",\n\t},\n\n\t/* Star */\n\t{\n\t\tfilters: [{ vendorId: 0x0519 }],\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\n\t\tlanguage: (device: USBDevice): PrinterLanguage => {\n\t\t\tlet language: PrinterLanguage = \"star-line\";\n\t\t\tlet name = device.productName ?? \"\";\n\n\t\t\t// Normalisation des noms\n\t\t\tname = name.replace(/^Star\\s+/i, \"\");\n\t\t\tname = name.replace(\n\t\t\t\t/^TSP(1|4|6|7|8|10)(13|43)(.*)?$/,\n\t\t\t\t(_m, p1, _p2, p3) => \"TSP\" + p1 + \"00\" + (p3 || \"\"),\n\t\t\t);\n\t\t\tname = name.replace(\n\t\t\t\t/^TSP(55|65)(1|4)(.*)?$/,\n\t\t\t\t(_m, p1, _p2, p3) => \"TSP\" + p1 + \"0\" + (p3 || \"\"),\n\t\t\t);\n\t\t\tname = name.replace(\n\t\t\t\t/^TSP([0-9]+)(II|III|IV|V|VI)?(.*)?$/,\n\t\t\t\t(_m, p1, p2) => \"TSP\" + p1 + (p2 || \"\"),\n\t\t\t);\n\n\t\t\tswitch (name) {\n\t\t\t\tcase \"TSP100IV\":\n\t\t\t\tcase \"mPOP\":\n\t\t\t\tcase \"mC-Label3\":\n\t\t\t\tcase \"mC-Print3\":\n\t\t\t\tcase \"mC-Print2\":\n\t\t\t\t\tlanguage = \"star-prnt\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"TSP100\":\n\t\t\t\tcase \"TSP100II\":\n\t\t\t\tcase \"TSP100III\":\n\t\t\t\t\tlanguage = \"star-graphics\";\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"BSC10\":\n\t\t\t\tcase \"BSC10BR\":\n\t\t\t\tcase \"BSC10II\":\n\t\t\t\t\tlanguage = \"esc-pos\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn language;\n\t\t},\n\n\t\tcodepageMapping: \"star\",\n\t},\n\n\t/* Epson */\n\t{\n\t\tfilters: [{ vendorId: 0x04b8 }],\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\t\tlanguage: \"esc-pos\",\n\t\tcodepageMapping: \"epson\",\n\t},\n\n\t/* Citizen */\n\t{\n\t\tfilters: [{ vendorId: 0x1d90 }],\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\t\tlanguage: \"esc-pos\",\n\t\tcodepageMapping: \"citizen\",\n\t},\n\n\t/* HP */\n\t{\n\t\tfilters: [{ vendorId: 0x05d9 }],\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\t\tlanguage: \"esc-pos\",\n\t\tcodepageMapping: \"hp\",\n\t},\n\n\t/* Fujitsu */\n\t{\n\t\tfilters: [{ vendorId: 0x04c5 }],\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\t\tlanguage: \"esc-pos\",\n\t\tcodepageMapping: \"epson\",\n\t},\n\n\t/* Dtronic */\n\t{\n\t\tfilters: [{ vendorId: 0x0fe6, productId: 0x811e }],\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\t\tlanguage: \"esc-pos\",\n\t\tcodepageMapping: \"epson\",\n\t},\n\n\t/* Xprinter */\n\t{\n\t\tfilters: [{ vendorId: 0x1fc9, productId: 0x2016 }],\n\t\tconfiguration: 1,\n\t\tinterface: 0,\n\t\tlanguage: \"esc-pos\",\n\t\tcodepageMapping: \"xprinter\",\n\t},\n];\n\nexport default class WebUSBReceiptPrinter {\n\tprivate emitter: EventEmitter<PrinterEvents>;\n\tprivate device: USBDevice | null = null;\n\tprivate profile: DeviceProfile | null = null;\n\tprivate endpoints: {\n\t\tinput: USBEndpoint | null;\n\t\toutput: USBEndpoint | null;\n\t} = { input: null, output: null };\n\n\tconstructor() {\n\t\tthis.emitter = new EventEmitter<PrinterEvents>();\n\n\t\t// Déconnexion physique du device\n\t\tnavigator.usb.addEventListener(\n\t\t\t\"disconnect\",\n\t\t\t(event: USBConnectionEvent) => {\n\t\t\t\tif (this.device === event.device) {\n\t\t\t\t\tthis.emitter.emit(\"disconnected\");\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tasync connect(): Promise<void> {\n\t\ttry {\n\t\t\tconst filters = DeviceProfiles.flatMap((p) => p.filters);\n\t\t\tconst device = await navigator.usb.requestDevice({ filters });\n\n\t\t\tif (device) {\n\t\t\t\tawait this.open(device);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(`Could not connect! ${error}`);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync reconnect(previousDevice: {\n\t\tserialNumber?: string;\n\t\tvendorId: number;\n\t\tproductId: number;\n\t}): Promise<void> {\n\t\tconst devices = await navigator.usb.getDevices();\n\n\t\tconst device =\n\t\t\tdevices.find((d) => d.serialNumber === previousDevice.serialNumber) ??\n\t\t\tdevices.find(\n\t\t\t\t(d) =>\n\t\t\t\t\td.vendorId === previousDevice.vendorId &&\n\t\t\t\t\td.productId === previousDevice.productId,\n\t\t\t);\n\n\t\tif (device) {\n\t\t\tawait this.open(device);\n\t\t}\n\t}\n\n\tprivate async open(device: USBDevice): Promise<void> {\n\t\tthis.device = device;\n\n\t\tthis.profile =\n\t\t\tDeviceProfiles.find((item) =>\n\t\t\t\titem.filters.some((filter) =>\n\t\t\t\t\tfilter.productId != null\n\t\t\t\t\t\t? filter.vendorId === device.vendorId &&\n\t\t\t\t\t\t\tfilter.productId === device.productId\n\t\t\t\t\t\t: filter.vendorId === device.vendorId,\n\t\t\t\t),\n\t\t\t) ?? null;\n\n\t\tif (!this.profile) {\n\t\t\tthrow new Error(\"No matching device profile found.\");\n\t\t}\n\n\t\tawait device.open();\n\t\tawait device.selectConfiguration(this.profile.configuration);\n\t\tawait device.claimInterface(this.profile.interface);\n\n\t\tconst iface = device.configuration?.interfaces.find(\n\t\t\t(i) => i.interfaceNumber === this.profile!.interface,\n\t\t);\n\t\tif (!iface) {\n\t\t\tthrow new Error(\"USB interface not found on device.\");\n\t\t}\n\n\t\t// `alternate` est l’alternate courant, défini par le navigateur\n\t\tconst alt = iface.alternate ?? iface.alternates?.[0];\n\t\tif (!alt) {\n\t\t\tthrow new Error(\"USB alternate interface not available.\");\n\t\t}\n\n\t\tthis.endpoints.output =\n\t\t\talt.endpoints.find((e) => e.direction === \"out\") ?? null;\n\t\tthis.endpoints.input =\n\t\t\talt.endpoints.find((e) => e.direction === \"in\") ?? null;\n\n\t\ttry {\n\t\t\t// Certains drivers n’aiment pas reset -> on encapsule\n\t\t\tawait device.reset();\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\n\t\tconst language = await this.evaluate(this.profile.language);\n\t\tconst codepageMapping = await this.evaluate(this.profile.codepageMapping);\n\n\t\tthis.emitter.emit(\"connected\", {\n\t\t\ttype: \"usb\",\n\t\t\tmanufacturerName: device.manufacturerName ?? undefined,\n\t\t\tproductName: device.productName ?? undefined,\n\t\t\tserialNumber: device.serialNumber ?? undefined,\n\t\t\tvendorId: device.vendorId,\n\t\t\tproductId: device.productId,\n\t\t\tlanguage,\n\t\t\tcodepageMapping,\n\t\t});\n\t}\n\n\tprivate async evaluate<T>(\n\t\texpression: T | ((device: USBDevice) => MaybeAsync<T>),\n\t): Promise<T> {\n\t\tif (typeof expression === \"function\") {\n\t\t\tconst fn = expression as (d: USBDevice) => MaybeAsync<T>;\n\t\t\treturn fn(this.device as USBDevice);\n\t\t}\n\t\treturn expression as T;\n\t}\n\n\tasync listen(): Promise<boolean | void> {\n\t\tif (this.endpoints.input) {\n\t\t\tawait this.read();\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate async read(): Promise<void> {\n\t\tif (!this.device || !this.endpoints.input) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = await this.device.transferIn(\n\t\t\tthis.endpoints.input.endpointNumber,\n\t\t\t64,\n\t\t);\n\t\tif (result?.data?.byteLength) {\n\t\t\tthis.emitter.emit(\"data\", result.data);\n\t\t}\n\t\t// boucle\n\t\tawait this.read();\n\t}\n\n\tasync disconnect(): Promise<void> {\n\t\tif (!this.device) return;\n\n\t\ttry {\n\t\t\tawait this.device.close();\n\t\t} finally {\n\t\t\tthis.device = null;\n\t\t\tthis.profile = null;\n\t\t\tthis.endpoints = { input: null, output: null };\n\t\t\tthis.emitter.emit(\"disconnected\");\n\t\t}\n\t}\n\n\tasync print(command: BufferSource): Promise<void> {\n\t\tif (this.device && this.endpoints.output) {\n\t\t\ttry {\n\t\t\t\tawait this.device.transferOut(\n\t\t\t\t\tthis.endpoints.output.endpointNumber,\n\t\t\t\t\tcommand,\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(\"No device/output endpoint available.\");\n\t\t}\n\t}\n\n\taddEventListener<K extends keyof PrinterEvents>(\n\t\tname: K,\n\t\tfn: (...args: PrinterEvents[K]) => void,\n\t): void {\n\t\tthis.emitter.on(name, fn);\n\t}\n}\n"],"names":["EventEmitter","event","listener","set","args","fn","DeviceProfiles","device","language","name","_m","p1","_p2","p3","p2","WebUSBReceiptPrinter","filters","p","error","previousDevice","devices","d","item","filter","iface","i","alt","e","codepageMapping","expression","result","command"],"mappings":"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"}